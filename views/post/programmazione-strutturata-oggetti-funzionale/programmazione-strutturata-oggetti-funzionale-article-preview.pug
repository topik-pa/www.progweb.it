div(class="preview")
  div(class="badge eng") #[a(href="/engineering", title="Engineering") Engineering]
  h2
    a(href="/programmazione-strutturata-oggetti-funzionale", title="I tre paradigmi di programmazione: strutturata, ad oggetti e funzionale") I tre paradigmi di programmazione: strutturata, ad oggetti e funzionale
  a(href="/programmazione-strutturata-oggetti-funzionale", title="I tre paradigmi di programmazione: strutturata, ad oggetti e funzionale") 
    picture 
      source(media="(max-width: 414px)", srcset="/assets/images/post/006-programmazione-strutturata-oggetti-funzionale/programmazione-strutturata-oggetti-funzionale-s.webp")
      source(media="(max-width: 768px)", srcset="/assets/images/post/006-programmazione-strutturata-oggetti-funzionale/programmazione-strutturata-oggetti-funzionale-m.webp")
      img(loading="lazy", width="512", height="640", src="/assets/images/post/006-programmazione-strutturata-oggetti-funzionale/programmazione-strutturata-oggetti-funzionale-s.webp", alt="I tre paradigmi di programmazione: strutturata, ad oggetti e funzionale")

  p I principali paradigmi di programmazione si riducono a tre: programmazione strutturata, programmazione ad oggetti e programmazione funzionale. Lo scopo di questo articolo è quello di evidenziarne i caratteri salienti e i vantaggi che derivano dalla loro applicazione. 

  h2 Programmazione strutturata
  p Lo scopo della programmazione strutturata è la #[em decomposizione di una applicazione software in moduli], ogni modulo può, a sua volta, essere suddiviso ricorsivamente in componenti più piccole, fino ad arrivare alla #[em singola funzione atomica]. Questo paradigma permette di affrontare un problema complesso (la nostra applicazione) attraverso un #[em approccio divide-et-impera] separando le sue funzionalità in unità più piccole e gestendole in maniera indipendente: è un approcciò più strategico nella gestione della complessità. 
  p Ogni funzione può essere descritta tramite l'utilizzo delle #[em tre strutture di controllo]: sequenza, selezione e iterazione, ne deriva che tutti i programmi, a prescindere dalla loro complessità, possono essere descritti utilizzando solamente questi tre principi di base. 
  p Un altro concetto importante circa il paradigma della programmazione strutturata e il suo approccio modulare riguarda il fatto che le funzioni atomiche risultanti dalla decomposizione sono soggette a #[em test formali] volti a verificare la presenza eventuale di bug: il successo del test ci dimostra che un tale bug è presente nel sistema che stiamo progettando; al contrario il fallimento del test ci può dare una ragionevole sicurezza che certuni bug non siano presenti, nonostante non sia formalmente possibile dimostrarne #[a(href="/programmazione-strutturata-oggetti-funzionale", title="I tre paradigmi di programmazione: strutturata, ad oggetti e funzionale") Continua...]
  div(class="published") Pubblicato il <time datetime="2024-09-24">09 aprile 2024</time>